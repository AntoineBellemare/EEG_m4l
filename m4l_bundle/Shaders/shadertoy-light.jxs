<jittershader name="default">
	<description> Default Slab </description>
	<param name="iTime" type="float" default="1.0" />
	<param name="tex0" type="int" default="0" />
	<param name="iResolution" type="vec2"  state="VIEWPORT" /> //default="1920, 1080" />
	<param name="iMouse" type="vec2" state="VIEWPORT" />

	<param name="movement" type="float" default="3.5" />
	<param name="complexity" type="float" default="10." />
	<param name="complexity2" type="float" default="10." />
	<param name="saturation" type="float" default="0.5" />
	<param name="hue_map" type="float" default="1.1" />
	<param name="tau_map" type="float" default="1.5" />
	<param name="light" type="float" default="0.5" />
	<param name="intricate" type="float" default="0.5" />
	<param name="rotate_map" type="float" default="0.2" />
	<param name="radioactive" type="float" default="30" />
	<param name="speed" type="float" default="0.01" />
	<param name="design" type="float" default="1.5" />


	<param name="cos_map" type="float" default="-1." />
	<language name="glsl" version="1.0">
		<bind param="iTime" program="fp" />
		<bind param="iResolution" program="fp" />
		<bind param="tex0" program="fp" />
		<bind param="iMouse" program="fp" />

		<bind param="movement" program="fp" />
		<bind param="complexity" program="fp" />
		<bind param="complexity2" program="fp" />
		<bind param="saturation" program="fp" />
		<bind param="hue_map" program="fp" />
		<bind param="tau_map" program="fp" />
		<bind param="cos_map" program="fp" />
		<bind param="light" program="fp" />
		<bind param="intricate" program="fp" />
		<bind param="rotate_map" program="fp" />
		<bind param="radioactive" program="fp" />
		<bind param="speed" program="fp" />
		<bind param="design" program="fp" />
		
		<program name="vp" type="vertex">
<![CDATA[
varying vec2 texcoord;
varying vec2 iResolution;
void main (void)
{
    gl_Position = ftransform();
    texcoord    = vec2(gl_TextureMatrix[0] * gl_MultiTexCoord0);
		iResolution = vec2 (abs(gl_TextureMatrix[0][0][0]), abs(gl_TextureMatrix[0][1][1]));
}
]]>
		</program>
		<program name="fp" type="fragment">
<![CDATA[
varying vec2 texcoord;
uniform vec2 iResolution;
uniform vec2 iMouse;
uniform sampler2DRect tex0;
uniform float iTime;
uniform float ratio;
uniform float movement;
uniform float saturation;
uniform float hue_map;
uniform float cos_map;
uniform float tau_map;
uniform float light;
uniform float intricate;
uniform float rotate_map;
uniform float complexity;
uniform float complexity2;
uniform float radioactive;
uniform float speed;
uniform float design;


mat2 r2d(float a) {
	float c = cos(a), s = sin(a);
	return mat2(c, s, -s, c);
}

vec2 path(float t) {
	float a = sin(t*.2 + 1.8), b = sin(t*.8);
	return vec2(2.*a, a*b);
}

float g = 0.;
float de(vec3 p) {
	p.xy -= path(p.z);

	float d = -length(p.xy) + 2.;// tunnel (inverted cylinder)

	p.xy += vec2(cos(p.z + iTime)*sin(iTime), cos(p.z + iTime));
	p.z -= 0.3 + iTime * 6.;
	d = min(d, dot(p, normalize(sign(p))) - 1.); // octahedron (LJ's formula)
	// I added this in the last 1-2 minutes, but I'm not sure if I like it actually!

	// Trick inspired by balkhan's shadertoys.
	// Usually, in raymarch shaders it gives a glow effect,
	// here, it gives a colors patchwork & transparent voxels effects.
	g += .415 / (.21 + d * d);
	return d;
}

///INSERT SHADERTOY CODE HERE //////////////////////////////////////////////////////////////////////////////////////
/// Change fragcoord and fragcolor by gl_FragCoord and gl_FragColor
/// Replace void main(xxxxxxxxxxxxxxxxx) by void main(void)
///https://www.shadertoy.com/view/XsXXDn


// http://www.pouet.net/prod.php?which=57245
// If you intend to reuse this shader, please add credits to 'Danilo Guanabara'

#define t iTime
#define r iResolution.xy

void main(void){
	vec3 c;
	float l,z=t;
	for(int i=0;i<6;i++) {
		vec2 uv,p=gl_FragCoord.xy/r;
		uv=p;
		p-=.5;
		p.x*=r.x/r.y;
		z+=.07;
		l=length(p);
		uv+=p/l*(sin(z)+complexity)*abs(sin(l*complexity2-z*speed));
		c[i]=.008/length(abs(mod(uv,design)-.5));
	}
	gl_FragColor=vec4(c/l,t);
}
///END SHADERTOY CODE HERE //////////////////////////////////////////////////////////////////////////////////////////

]]>
		</program>
	</language>
</jittershader>
